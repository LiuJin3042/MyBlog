# git基础命令

## 初始配置
`gitinit 初始化
`gitstatus

## 提交和日志
`gitadd
`gitcommit -m 'write something to explain the changes'
`gitlog --pretty=oneline 
`gitlog --graph --pretty=oneline --abbrev-commit可视化

## 回滚
`gitreset --hard HEAD^ 
`gitreset --hard version_id 
`gitcheckout -- <filename> 丢弃工作区的修改，退回到版本库（或暂存区）最新版本
`gitreset HEAD <filename> 撤销暂存区的修改，重新放回工作区
rm <filename> 从系统删除文件
`gitrm <filename> 从版本库删除文件。删除之后要git commit -m提交

## 远程仓库
github git仓库托管服务
`gitremote 查看远程库信息
`gitremote -v 查看远程库详细信息
`gitremote add origin https://github.com/LiuJin3042/learngit.git 关联远程库，默认名称origin
`gitremote add <repo_name> https://github.com/LiuJin3042/learngit.git 关联远程库，用任意名称
`gitpush -u origin master 将本地分支master上传到远程库origin，-u参数关联master分支
`gitpush origin master(dev) 将本地分支master(dev)的修改推送到github。没有联网也可以工作
`gitclone https://... 复制远程库到本地，复制后只能看到master分支
`gitpull 必须先将远程库同步到本地，解决冲突后本地才可以push到远程

## 多分支
`gitbranch --set-upstream-to=origin/dev dev 将本地的dev和远程的dev链接起来
`gitcheckout -b branch-name origin/branch-name 本地创建和远程分支对应的分支，分支名称最好一致
`gitcheckout -b dev 创建dev分支，切换到dev分支（相当于下面两条指令）
    git branch dev 
    git checkout dev
`gitbranch 查看分支
`gitmerge dev 合并指定分支到当前分支
`gitbranch -d dev 删除dev
`gitmerge --no-ff -m "merge with no-ff" dev 禁用fast forward

## 暂存状态
`gitstash 清空工作区，将当前工作放到栈里
`gitstash list 查看栈
`gitstash pop 恢复栈，清空内容。
`gitstash app

## 标签
`gittag 查看所有标签
`gittag v0.9 f52c633 在id为f52c633的commit上打一个标签，标签名是v0.9
`gitshow <tagname> 查看标签信息
`gittag -a v0.1 -m "version 0.1 released" 1094adb -a添加标签名称，-m添加备注
`gittag -d <tagname>
`gitpush origin <tagname> 将本地的标签推到远程
`gitpush origin --tags 推送所有标签
`gitpush origin :refs/tags/v0.9 删除远程标签，要先删除本地的标签，然后用这句话

## 杂项配置
`gitconfig --global color.ui true 命令显示颜色

## 忽略文件
编写 .gitignore 文件
.gitignore 需要提交到库里，并对文件做版本管理
`gitadd -f App.class 强制添加被忽略的文件
`gitcheck-ignore -v App.class

## 命令别名
`gitconfig --global alias.st status 用st代替status命令。--global是全局参数，表示本电脑所有git库都可以使用

## 配置git服务器
推荐linux系统
`sudo apt-get install git`
`sudo adduser git`
把所有公钥导入到`/home/git/.ssh/authorized_keys`文件里，一行一个
先选定一个目录作为Git仓库，假定`是/srv/sample.git`，在/srv目录下输入命令：
`sudo git init --bare sample.git`
把owner改为git: `sudo chown -R git:git sample.git`
禁用shell登录sudo chown -R git:git sample.git改为git: `x:1001:1001:...:/home/git:/usr/bin/git-shell`
`git clone git@server:/srv/sample.git`
